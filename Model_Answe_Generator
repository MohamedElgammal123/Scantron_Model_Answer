# -*- coding: utf-8 -*-
"""
Created on Thu Mar 27 03:29:58 2025

@author: mmelgamm
"""

# app.py
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import matplotlib.patches as patches
from io import BytesIO

# --------------------------
# Hardcoded Dictionaries
# --------------------------
# Exam code coordinates dictionary (exam model bubbles)
exam_code_coords = {
    "00": (1189, 833, 1219, 833),
    "11": (1189, 865, 1219, 865),
    "22": (1189, 898, 1219, 898),
    "33": (1189, 963, 1219, 963),
    "44": (1189, 966, 1219, 966),
    "55": (1189, 998, 1219, 998),
    "66": (1189, 1034, 1219, 1034),
    "77": (1189, 1066, 1219, 1066),
    "88": (1189, 1099, 1219, 1099),
    "99": (1189, 1131, 1219, 1131),
}

# Answer bubble coordinates dictionary (only a subset is shown; extend as needed)
answer_bubbles = {
 1: {'A': (221, 1270),
     'B': (254, 1270),
     'C': (289, 1270),
     'D': (319, 1270),
     'E': (354, 1270)},
 2: {'A': (221, 1308),
     'B': (254, 1308),
     'C': (289, 1308),
     'D': (319, 1308),
     'E': (354, 1308)},
 3: {'A': (221, 1351),
     'B': (254, 1351),
     'C': (289, 1351),
     'D': (319, 1351),
     'E': (354, 1351)},
 4: {'A': (221, 1390),
     'B': (254, 1390),
     'C': (289, 1390),
     'D': (319, 1390),
     'E': (354, 1390)},
 5: {'A': (221, 1429),
     'B': (254, 1429),
     'C': (289, 1429),
     'D': (319, 1429),
     'E': (354, 1429)},
 6: {'A': (221, 1472),
     'B': (254, 1472),
     'C': (289, 1472),
     'D': (319, 1472),
     'E': (354, 1472)},
 7: {'A': (221, 1512),
     'B': (254, 1512),
     'C': (289, 1512),
     'D': (319, 1512),
     'E': (354, 1512)},
 8: {'A': (221, 1549),
     'B': (254, 1549),
     'C': (289, 1549),
     'D': (319, 1549),
     'E': (354, 1549)},
 9: {'A': (221, 1588),
     'B': (254, 1588),
     'C': (289, 1588),
     'D': (319, 1588),
     'E': (354, 1588)},
 10: {'A': (221, 1629),
      'B': (254, 1629),
      'C': (289, 1629),
      'D': (319, 1629),
      'E': (354, 1629)},
 11: {'A': (522, 1270),
      'B': (556, 1270),
      'C': (586, 1270),
      'D': (621, 1270),
      'E': (655, 1270)},
 12: {'A': (522, 1308),
      'B': (556, 1308),
      'C': (586, 1308),
      'D': (621, 1308),
      'E': (655, 1308)},
 13: {'A': (522, 1351),
      'B': (556, 1351),
      'C': (586, 1351),
      'D': (621, 1351),
      'E': (655, 1351)},
 14: {'A': (522, 1390),
      'B': (556, 1390),
      'C': (586, 1390),
      'D': (621, 1390),
      'E': (655, 1390)},
 15: {'A': (522, 1429),
      'B': (556, 1429),
      'C': (586, 1429),
      'D': (621, 1429),
      'E': (655, 1429)},
 16: {'A': (522, 1472),
      'B': (556, 1472),
      'C': (586, 1472),
      'D': (621, 1472),
      'E': (655, 1472)},
 17: {'A': (522, 1512),
      'B': (556, 1512),
      'C': (586, 1512),
      'D': (621, 1512),
      'E': (655, 1512)},
 18: {'A': (522, 1549),
      'B': (556, 1549),
      'C': (586, 1549),
      'D': (621, 1549),
      'E': (655, 1549)},
 19: {'A': (522, 1588),
      'B': (556, 1588),
      'C': (586, 1588),
      'D': (621, 1588),
      'E': (655, 1588)},
 20: {'A': (522, 1629),
      'B': (556, 1629),
      'C': (586, 1629),
      'D': (621, 1629),
      'E': (655, 1629)},
 21: {'A': (823, 1270),
      'B': (858, 1270),
      'C': (888, 1270),
      'D': (922, 1270),
      'E': (957, 1270)},
 22: {'A': (823, 1308),
      'B': (858, 1308),
      'C': (888, 1308),
      'D': (922, 1308),
      'E': (957, 1308)},
 23: {'A': (823, 1351),
      'B': (858, 1351),
      'C': (888, 1351),
      'D': (922, 1351),
      'E': (957, 1351)},
 24: {'A': (823, 1390),
      'B': (858, 1390),
      'C': (888, 1390),
      'D': (922, 1390),
      'E': (957, 1390)},
 25: {'A': (823, 1429),
      'B': (858, 1429),
      'C': (888, 1429),
      'D': (922, 1429),
      'E': (957, 1429)},
 26: {'A': (823, 1472),
      'B': (858, 1472),
      'C': (888, 1472),
      'D': (922, 1472),
      'E': (957, 1472)},
 27: {'A': (823, 1512),
      'B': (858, 1512),
      'C': (888, 1512),
      'D': (922, 1512),
      'E': (957, 1512)},
 28: {'A': (823, 1549),
      'B': (858, 1549),
      'C': (888, 1549),
      'D': (922, 1549),
      'E': (957, 1549)},
 29: {'A': (823, 1588),
      'B': (858, 1588),
      'C': (888, 1588),
      'D': (922, 1588),
      'E': (957, 1588)},
 30: {'A': (823, 1629),
      'B': (858, 1629),
      'C': (888, 1629),
      'D': (922, 1629),
      'E': (957, 1629)},
 31: {'A': (1121, 1270),
      'B': (1155, 1270),
      'C': (1190, 1270),
      'D': (1224, 1270),
      'E': (1254, 1270)},
 32: {'A': (1121, 1308),
      'B': (1155, 1308),
      'C': (1190, 1308),
      'D': (1224, 1308),
      'E': (1254, 1308)},
 33: {'A': (1121, 1351),
      'B': (1155, 1351),
      'C': (1190, 1351),
      'D': (1224, 1351),
      'E': (1254, 1351)},
 34: {'A': (1121, 1390),
      'B': (1155, 1390),
      'C': (1190, 1390),
      'D': (1224, 1390),
      'E': (1254, 1390)},
 35: {'A': (1121, 1429),
      'B': (1155, 1429),
      'C': (1190, 1429),
      'D': (1224, 1429),
      'E': (1254, 1429)},
 36: {'A': (1121, 1472),
      'B': (1155, 1472),
      'C': (1190, 1472),
      'D': (1224, 1472),
      'E': (1254, 1472)},
 37: {'A': (1121, 1512),
      'B': (1155, 1512),
      'C': (1190, 1512),
      'D': (1224, 1512),
      'E': (1254, 1512)},
 38: {'A': (1121, 1549),
      'B': (1155, 1549),
      'C': (1190, 1549),
      'D': (1224, 1549),
      'E': (1254, 1549)},
 39: {'A': (1121, 1588),
      'B': (1155, 1588),
      'C': (1190, 1588),
      'D': (1224, 1588),
      'E': (1254, 1588)},
 40: {'A': (1121, 1629),
      'B': (1155, 1629),
      'C': (1190, 1629),
      'D': (1224, 1629),
      'E': (1254, 1629)},
 41: {'A': (1422, 1270),
      'B': (1457, 1270),
      'C': (1489, 1270),
      'D': (1521, 1270),
      'E': (1556, 1270)},
 42: {'A': (1422, 1308),
      'B': (1457, 1308),
      'C': (1489, 1308),
      'D': (1521, 1308),
      'E': (1556, 1308)},
 43: {'A': (1422, 1351),
      'B': (1457, 1351),
      'C': (1489, 1351),
      'D': (1521, 1351),
      'E': (1556, 1351)},
 44: {'A': (1422, 1390),
      'B': (1457, 1390),
      'C': (1489, 1390),
      'D': (1521, 1390),
      'E': (1556, 1390)},
 45: {'A': (1422, 1429),
      'B': (1457, 1429),
      'C': (1489, 1429),
      'D': (1521, 1429),
      'E': (1556, 1429)},
 46: {'A': (1422, 1472),
      'B': (1457, 1472),
      'C': (1489, 1472),
      'D': (1521, 1472),
      'E': (1556, 1472)},
 47: {'A': (1422, 1512),
      'B': (1457, 1512),
      'C': (1489, 1512),
      'D': (1521, 1512),
      'E': (1556, 1512)},
 48: {'A': (1420, 1549),
      'B': (1455, 1549),
      'C': (1487, 1549),
      'D': (1519, 1549),
      'E': (1554, 1549)},
 49: {'A': (1420, 1588),
      'B': (1455, 1588),
      'C': (1487, 1588),
      'D': (1519, 1588),
      'E': (1554, 1588)},
 50: {'A': (1420, 1629),
      'B': (1455, 1629),
      'C': (1487, 1629),
      'D': (1519, 1629),
      'E': (1554, 1629)},
 51: {'A': (221, 1747),
      'B': (254, 1747),
      'C': (289, 1747),
      'D': (319, 1747),
      'E': (354, 1747)},
 52: {'A': (221, 1790),
      'B': (254, 1790),
      'C': (289, 1790),
      'D': (319, 1790),
      'E': (354, 1790)},
 53: {'A': (221, 1829),
      'B': (254, 1829),
      'C': (289, 1829),
      'D': (319, 1829),
      'E': (354, 1829)},
 54: {'A': (221, 1872),
      'B': (254, 1872),
      'C': (289, 1872),
      'D': (319, 1872),
      'E': (354, 1872)},
 55: {'A': (221, 1910),
      'B': (254, 1910),
      'C': (289, 1910),
      'D': (319, 1910),
      'E': (354, 1910)},
 56: {'A': (221, 1949),
      'B': (254, 1949),
      'C': (289, 1949),
      'D': (319, 1949),
      'E': (354, 1949)},
 57: {'A': (221, 1988),
      'B': (254, 1988),
      'C': (289, 1988),
      'D': (319, 1988),
      'E': (354, 1988)},
 58: {'A': (221, 2031),
      'B': (254, 2031),
      'C': (289, 2031),
      'D': (319, 2031),
      'E': (354, 2031)},
 59: {'A': (221, 2070),
      'B': (254, 2070),
      'C': (289, 2070),
      'D': (319, 2070),
      'E': (354, 2070)},
 60: {'A': (221, 2109),
      'B': (254, 2109),
      'C': (289, 2109),
      'D': (319, 2109),
      'E': (354, 2109)},
 61: {'A': (520, 1749),
      'B': (554, 1749),
      'C': (584, 1749),
      'D': (619, 1749),
      'E': (653, 1749)},
 62: {'A': (522, 1790),
      'B': (556, 1790),
      'C': (586, 1790),
      'D': (621, 1790),
      'E': (655, 1790)},
 63: {'A': (522, 1829),
      'B': (556, 1829),
      'C': (586, 1829),
      'D': (621, 1829),
      'E': (655, 1829)},
 64: {'A': (522, 1872),
      'B': (556, 1872),
      'C': (586, 1872),
      'D': (621, 1872),
      'E': (655, 1872)},
 65: {'A': (522, 1910),
      'B': (556, 1910),
      'C': (586, 1910),
      'D': (621, 1910),
      'E': (655, 1910)},
 66: {'A': (522, 1949),
      'B': (556, 1949),
      'C': (586, 1949),
      'D': (621, 1949),
      'E': (655, 1949)},
 67: {'A': (522, 1988),
      'B': (556, 1988),
      'C': (586, 1988),
      'D': (621, 1988),
      'E': (655, 1988)},
 68: {'A': (522, 2031),
      'B': (556, 2031),
      'C': (586, 2031),
      'D': (621, 2031),
      'E': (655, 2031)},
 69: {'A': (522, 2070),
      'B': (556, 2070),
      'C': (586, 2070),
      'D': (621, 2070),
      'E': (655, 2070)},
 70: {'A': (522, 2109),
      'B': (556, 2109),
      'C': (586, 2109),
      'D': (621, 2109),
      'E': (655, 2109)},
 71: {'A': (819, 1749),
      'B': (855, 1749),
      'C': (885, 1749),
      'D': (920, 1749),
      'E': (954, 1749)},
 72: {'A': (819, 1790),
      'B': (855, 1790),
      'C': (885, 1790),
      'D': (920, 1790),
      'E': (954, 1790)},
 73: {'A': (819, 1829),
      'B': (855, 1829),
      'C': (885, 1829),
      'D': (920, 1829),
      'E': (954, 1829)},
 74: {'A': (821, 1872),
      'B': (856, 1872),
      'C': (886, 1872),
      'D': (920, 1872),
      'E': (955, 1872)},
 75: {'A': (819, 1910),
      'B': (855, 1910),
      'C': (885, 1910),
      'D': (919, 1910),
      'E': (954, 1910)},
 76: {'A': (819, 1949),
      'B': (855, 1949),
      'C': (885, 1949),
      'D': (919, 1949),
      'E': (954, 1949)},
 77: {'A': (819, 1988),
      'B': (855, 1988),
      'C': (885, 1988),
      'D': (919, 1988),
      'E': (954, 1988)},
 78: {'A': (823, 2031),
      'B': (858, 2031),
      'C': (888, 2031),
      'D': (922, 2031),
      'E': (957, 2031)},
 79: {'A': (823, 2070),
      'B': (858, 2070),
      'C': (888, 2070),
      'D': (922, 2070),
      'E': (957, 2070)},
 80: {'A': (823, 2109),
      'B': (858, 2109),
      'C': (888, 2109),
      'D': (922, 2109),
      'E': (957, 2109)},
 81: {'A': (1119, 1749),
      'B': (1153, 1749),
      'C': (1188, 1749),
      'D': (1222, 1749),
      'E': (1252, 1749)},
 82: {'A': (1121, 1790),
      'B': (1155, 1790),
      'C': (1190, 1790),
      'D': (1224, 1790),
      'E': (1254, 1790)},
 83: {'A': (1121, 1829),
      'B': (1155, 1829),
      'C': (1190, 1829),
      'D': (1224, 1829),
      'E': (1254, 1829)},
 84: {'A': (1121, 1872),
      'B': (1155, 1872),
      'C': (1190, 1872),
      'D': (1224, 1872),
      'E': (1254, 1872)},
 85: {'A': (1121, 1910),
      'B': (1155, 1910),
      'C': (1190, 1910),
      'D': (1224, 1910),
      'E': (1254, 1910)},
 86: {'A': (1121, 1949),
      'B': (1155, 1949),
      'C': (1190, 1949),
      'D': (1224, 1949),
      'E': (1254, 1949)},
 87: {'A': (1121, 1988),
      'B': (1155, 1988),
      'C': (1190, 1988),
      'D': (1224, 1988),
      'E': (1254, 1988)},
 88: {'A': (1121, 2031),
      'B': (1155, 2031),
      'C': (1190, 2031),
      'D': (1224, 2031),
      'E': (1254, 2031)},
 89: {'A': (1121, 2070),
      'B': (1155, 2070),
      'C': (1190, 2070),
      'D': (1224, 2070),
      'E': (1254, 2070)},
 90: {'A': (1121, 2109),
      'B': (1155, 2109),
      'C': (1190, 2109),
      'D': (1224, 2109),
      'E': (1254, 2109)},
 91: {'A': (1419, 1749),
      'B': (1454, 1749),
      'C': (1486, 1749),
      'D': (1519, 1749),
      'E': (1553, 1749)},
 92: {'A': (1419, 1792),
      'B': (1454, 1792),
      'C': (1486, 1792),
      'D': (1519, 1792),
      'E': (1553, 1792)},
 93: {'A': (1419, 1831),
      'B': (1454, 1831),
      'C': (1486, 1831),
      'D': (1519, 1831),
      'E': (1553, 1831)},
 94: {'A': (1420, 1872),
      'B': (1455, 1872),
      'C': (1487, 1872),
      'D': (1519, 1872),
      'E': (1554, 1872)},
 95: {'A': (1420, 1910),
      'B': (1455, 1910),
      'C': (1487, 1910),
      'D': (1519, 1910),
      'E': (1554, 1910)},
 96: {'A': (1420, 1951),
      'B': (1455, 1951),
      'C': (1487, 1951),
      'D': (1519, 1951),
      'E': (1554, 1951)},
 97: {'A': (1420, 1990),
      'B': (1455, 1990),
      'C': (1487, 1990),
      'D': (1519, 1990),
      'E': (1554, 1990)},
 98: {'A': (1422, 2031),
      'B': (1457, 2031),
      'C': (1489, 2031),
      'D': (1521, 2031),
      'E': (1556, 2031)},
 99: {'A': (1422, 2070),
      'B': (1457, 2070),
      'C': (1489, 2070),
      'D': (1521, 2070),
      'E': (1556, 2070)},
 100: {'A': (1422, 2109),
       'B': (1457, 2109),
       'C': (1489, 2109),
       'D': (1521, 2109),
       'E': (1556, 2109)}}

# --------------------------
# Helper Function
# --------------------------
def generate_highlighted_scantron(correct_answers, model_code, answer_bubbles, exam_code_coords, img):
    """
    Generates the highlighted scantron image.
    
    correct_answers: dict {question: answer_letter}
    model_code: string (e.g., "00")
    answer_bubbles: nested dict with answer coordinates
    exam_code_coords: dict with exam code coordinates (x1, y1, x2, y2)
    img: scantron image array
    Returns: (fig, logs) where logs is a list of strings describing each highlight.
    """
    fig, ax = plt.subplots(figsize=(10, 14))
    ax.imshow(img)
    plt.axis('off')
    
    logs = []
    # PART A: Highlight each correct answer bubble
    for q, correct in correct_answers.items():
        if q in answer_bubbles:
            if correct.upper() in answer_bubbles[q]:
                x, y = answer_bubbles[q][correct.upper()]
                circle = patches.Circle((x, y), radius=13, facecolor='black',
                                        edgecolor='black', linewidth=2, alpha=0.85)
                ax.add_patch(circle)
                logs.append(f"Highlighted Q{q} Option {correct} at (x={x}, y={y})")
            else:
                logs.append(f"No coordinate for Q{q} answer '{correct}'.")
        else:
            logs.append(f"No answer bubble data for Q{q}.")
    
    # PART B: Highlight exam model code
    if model_code in exam_code_coords:
        x1, y1, x2, y2 = exam_code_coords[model_code]
        # Mark the two exam code coordinates with red circles
        circle1 = patches.Circle((x1, y1), radius=11, facecolor='red', edgecolor='red',
                                 linewidth=2, alpha=0.85)
        circle2 = patches.Circle((x2, y2), radius=11, facecolor='red', edgecolor='red',
                                 linewidth=2, alpha=0.85)
        ax.add_patch(circle1)
        ax.add_patch(circle2)
        logs.append(f"Highlighted exam model '{model_code}' at (x1={x1}, y1={y1}) and (x2={x2}, y2={y2})")
    else:
        logs.append(f"Exam model '{model_code}' not found.")
    
    plt.title("Scantron Sheet: Highlighted Correct Answers + Exam Model")
    return fig, logs

# --------------------------
# Streamlit App Interface
# --------------------------
st.title("Scantron Highlighter App")
st.write("Upload the student answer Excel file and select the exam model code to generate a highlighted scantron image.")

# Upload correct answer file (Excel file with columns "Question" and "Answer")
uploaded_file = st.file_uploader("Upload Correct Answer Excel File", type=["xlsx"])

# Drop-down for selecting exam model code from available keys
model_options = sorted(list(exam_code_coords.keys()))
selected_model = st.selectbox("Select Exam Model Code", model_options, index=0)

# Button to generate highlighted scantron image
if st.button("Generate Highlighted Scantron"):
    if uploaded_file is not None:
        try:
            # Load correct answers from the uploaded Excel file
            df_answers = pd.read_excel(uploaded_file)
            correct_answers = dict(zip(df_answers["Question"], df_answers["Answer"]))
            
            # Load the scantron image; update path if needed
            scantron_image_path = r"C:\Magdy\TA\Scantron sheet\DOC002.jpg"
            img = mpimg.imread(scantron_image_path)
            
            # Generate the highlighted scantron image
            fig, highlight_logs = generate_highlighted_scantron(correct_answers, selected_model,
                                                                answer_bubbles, exam_code_coords, img)
            
            st.subheader("Highlighted Scantron")
            st.pyplot(fig)
            
            st.subheader("Highlight Logs")
            for log in highlight_logs:
                st.write(log)
            
            # Save the generated figure to a buffer for download
            buf = BytesIO()
            fig.savefig(buf, format="jpg", dpi=300, bbox_inches='tight')
            buf.seek(0)
            
            st.download_button(
                label="Download Highlighted Scantron Image",
                data=buf,
                file_name="Highlighted_Scantron.jpg",
                mime="image/jpeg"
            )
            
            # Optionally, show the uploaded answers as a reference table
            if st.checkbox("Show Uploaded Answer Reference"):
                st.subheader("Uploaded Student Answers")
                st.table(df_answers)
            
        except Exception as e:
            st.error(f"An error occurred: {e}")
    else:
        st.warning("Please upload a correct answer Excel file.")
